import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../styles/Profile.css";

function Profile() {
  const [profile, setProfile] = useState(null);
  const [editing, setEditing] = useState(false);
  const [formData, setFormData] = useState({});
  const navigate = useNavigate();
  const token = localStorage.getItem("access_token");

  useEffect(() => {
    const fetchProfile = async () => {
      const res = await fetch("http://localhost:8000/auth/profile/me", {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      const data = await res.json();
      console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è:", data);
      setProfile(data);
      setFormData(data);
    };
    fetchProfile();
  }, []);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSave = async () => {
    const res = await fetch("http://localhost:8000/auth/profile/me", {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(formData),
    });
    if (res.ok) {
      const updated = await res.json();
      setProfile(updated);
      setEditing(false);
    } else {
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è");
    }
  };

  if (!profile) return <div className="profile-container">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≤–æ–¥–∏–º –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º (–±–µ–∑ notes –∏ colors)
  const visibleFields = ["name", "surname", "lastname", "city"];

  // –†—É—Å—Å–∫–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª–µ–π
  const labels = {
    name: "–ò–º—è",
    surname: "–§–∞–º–∏–ª–∏—è",
    lastname: "–û—Ç—á–µ—Å—Ç–≤–æ",
    city: "–ì–æ—Ä–æ–¥",
  };

  return (
    <div className="profile-container">
      <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>

      {/* –ë–ª–æ–∫ username –∏ email */}
      <div className="profile-basic-info">
        <div>
          <strong>–õ–æ–≥–∏–Ω:</strong> <span>{profile.username || "-"}</span>
        </div>
        <div>
          <strong>Email:</strong> <span>{profile.email || "-"}</span>
        </div>
      </div>

      <div className="profile-grid">
        {visibleFields.map((field) => (
          <div key={field} className="profile-field">
            <label>{labels[field]}:</label>
            {editing ? (
              <input
                name={field}
                value={formData[field] || ""}
                onChange={handleChange}
              />
            ) : (
              <p>{profile[field] || "-"}</p>
            )}
          </div>
        ))}
      </div>
      <div className="profile-buttons">
        {editing ? (
          <button onClick={handleSave}>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        ) : (
          <button onClick={() => setEditing(true)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
        )}
      </div>
    </div>
  );
}

export default Profile;
